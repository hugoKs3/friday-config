views:
  - title: Home
    type: sections
    max_columns: 3
    sections:
      - type: grid
        cards:
          - show_current: false
            show_forecast: true
            type: weather-forecast
            entity: weather.home
            forecast_type: daily
            layout_options:
              grid_columns: 2
              grid_rows: 3
          - type: thermostat
            layout_options:
              grid_columns: 2
              grid_rows: 3
            entity: climate.general_2
            show_current_as_primary: true
            name: ' '
          - type: custom:stack-in-card
            mode: vertical
            cards:
              - type: custom:mushroom-template-card
                primary: Piscine - {{ states('sensor.temp_piscine_preserved') }} °C
                entity: switch.pompe_switch_0
                secondary: |-
                  {% if is_state('switch.vanne','on') %}
                      Remplissage
                    {% elif is_state(entity,'on') %}
                      Filtration
                    {% else %}
                      Arrêt
                    {% endif %}
                icon: mdi:pool
                icon_color: |-
                  {% if is_state(entity,'on') %}
                      blue
                    {% else %}
                      grey
                    {% endif %}
                tap_action:
                  action: navigate
                  navigation_path: /dashboard-mush/pool
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
              - type: custom:stack-in-card
                mode: horizontal
                cards:
                  - type: custom:mushroom-template-card
                    icon: mdi:refresh-auto
                    entity: input_boolean.mode_piscine
                    tap_action:
                      action: perform-action
                      confirmation: true
                      perform_action: input_boolean.toggle
                      target:
                        entity_id: input_boolean.mode_piscine
                    icon_color: |-
                      {% if is_state(entity,'on') %}
                                orange
                              {% else %}
                                grey
                              {% endif %}
                  - type: custom:mushroom-template-card
                    icon: mdi:white-balance-sunny
                    entity: input_boolean.saison_piscine
                    tap_action:
                      action: perform-action
                      confirmation: true
                      perform_action: input_boolean.toggle
                      target:
                        entity_id: input_boolean.saison_piscine
                    icon_color: |-
                      {% if is_state(entity,'on') %}
                                orange
                              {% else %}
                                grey
                              {% endif %}
                  - type: custom:mushroom-template-card
                    icon: mdi:pump
                    entity: switch.pompe_switch_0
                    tap_action:
                      action: perform-action
                      confirmation: true
                      perform_action: switch.toggle
                      target:
                        entity_id: switch.pompe_switch_0
                    icon_color: |-
                      {% if is_state(entity,'on') %}
                                orange
                              {% else %}
                                grey
                              {% endif %}
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
              - type: custom:stack-in-card
                mode: horizontal
                cards:
                  - type: custom:mushroom-template-card
                    icon: mdi:ph
                    entity: switch.electrolyseur
                    tap_action:
                      action: perform-action
                      confirmation: true
                      perform_action: switch.toggle
                      target:
                        entity_id: switch.electrolyseur
                    icon_color: |-
                      {% if is_state(entity,'on') %}
                                orange
                              {% else %}
                                grey
                              {% endif %}
                  - type: custom:mushroom-template-card
                    icon: mdi:water-pump
                    entity: switch.vanne
                    tap_action:
                      action: perform-action
                      confirmation: true
                      perform_action: switch.toggle
                      target:
                        entity_id: switch.vanne
                    icon_color: |-
                      {% if is_state(entity,'on') %}
                                orange
                              {% else %}
                                grey
                              {% endif %}
                  - type: custom:mushroom-template-card
                    icon: mdi:cog
                    entity: switch.vanne
                    tap_action:
                      action: navigate
                      navigation_path: /dashboard-mush/pool
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
            layout_options:
              grid_columns: 4
              grid_rows: 3
          - type: custom:stack-in-card
            mode: vertical
            cards:
              - type: custom:mushroom-template-card
                primary: Arrosage
                entity: switch.goutte
                secondary: |-
                  {% if is_state('switch.sprinkler','on') %}
                      Sprinkler
                    {% elif is_state(entity,'on') %}
                      Goutte-à-goutte
                    {% else %}
                      Arrêt
                    {% endif %}
                icon: |-
                  {% if is_state('switch.sprinkler','on') %}
                      mdi:sprinkler
                    {% elif is_state(entity,'on') %}
                      mdi:water-plus
                    {% else %}
                      mdi:watering-can
                    {% endif %}
                icon_color: |-
                  {% if is_state('switch.sprinkler','on') %}
                    blue
                  {% elif is_state(entity,'on') %}
                    blue
                  {% else %}
                    grey
                  {% endif %}
                tap_action:
                  action: navigate
                  navigation_path: /dashboard-mush/arrosage
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
              - type: custom:stack-in-card
                mode: horizontal
                cards:
                  - type: custom:mushroom-template-card
                    icon: mdi:sprinkler
                    entity: switch.sprinkler
                    tap_action:
                      action: perform-action
                      confirmation: true
                      perform_action: switch.toggle
                      target:
                        entity_id: switch.sprinkler
                    icon_color: |-
                      {% if is_state(entity,'on') %}
                                orange
                              {% else %}
                                grey
                              {% endif %}
                  - type: custom:mushroom-template-card
                    icon: mdi:water-plus
                    entity: switch.goutte
                    tap_action:
                      action: perform-action
                      confirmation: true
                      perform_action: switch.toggle
                      target:
                        entity_id: switch.goutte
                    icon_color: |-
                      {% if is_state(entity,'on') %}
                                orange
                              {% else %}
                                grey
                              {% endif %}
                  - type: custom:mushroom-template-card
                    icon: mdi:cog
                    entity: switch.vanne
                    tap_action:
                      action: navigate
                      navigation_path: /dashboard-mush/arrosage
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
            layout_options:
              grid_columns: 2
              grid_rows: 2
          - type: custom:mushroom-template-card
            primary: Portail
            icon: mdi:gate
            entity: switch.cheminee
            secondary: |
              {% if is_state(entity,'on')%}
                On
              {% else %}
                Off
              {% endif %}
            tap_action:
              action: perform-action
              perform_action: switch.toggle
              target:
                entity_id: switch.portail
            icon_color: |-
              {% if is_state(entity,'on') %}
                        orange
                      {% else %}
                        grey
                      {% endif %}
            layout_options:
              grid_columns: 2
              grid_rows: 2
      - type: grid
        cards:
          - type: custom:stack-in-card
            mode: horizontal
            cards:
              - type: custom:mushroom-entity-card
                entity: sensor.temperature_salon
                primary_info: name
                secondary_info: state
                name: Salon
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.temperature_salon
                hours_to_show: 24
                line_width: 2
                color_thresholds:
                  - value: 0
                    color: '#45b6fe'
                  - value: 20
                    color: '#08f26e'
                  - value: 30
                    color: '#f94449'
                height: 200
                show:
                  name: false
                  icon: false
                  state: false
                  legend: false
                  fill: fade
                card_mod:
                  style: >
                    :host { flex: 0.5 0.5 0% !important; } 

                    ha-card {background: none;box-shadow:
                    none;--ha-card-border-width: 0;padding-top: 0
                    !important;padding-right: 0px !important;-webkit-mask-image:
                    linear-gradient(to left, rgba(0,0,0,1) 75%, rgba(0,0,0,0));}
            layout_options:
              grid_columns: 2
              grid_rows: auto
          - type: custom:stack-in-card
            mode: horizontal
            cards:
              - type: custom:mushroom-entity-card
                entity: sensor.thermostat_current_temp
                primary_info: name
                secondary_info: state
                name: Couloir
                icon: mdi:thermometer
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.thermostat_current_temp
                hours_to_show: 24
                line_width: 2
                color_thresholds:
                  - value: 0
                    color: '#45b6fe'
                  - value: 20
                    color: '#08f26e'
                  - value: 30
                    color: '#f94449'
                height: 200
                show:
                  name: false
                  icon: false
                  state: false
                  legend: false
                  fill: fade
                card_mod:
                  style: >
                    :host { flex: 0.5 0.5 0% !important; } 

                    ha-card {background: none;box-shadow:
                    none;--ha-card-border-width: 0;padding-top: 0
                    !important;padding-right: 0px !important;-webkit-mask-image:
                    linear-gradient(to left, rgba(0,0,0,1) 75%, rgba(0,0,0,0));}
            layout_options:
              grid_columns: 2
              grid_rows: auto
          - type: custom:stack-in-card
            mode: horizontal
            cards:
              - type: custom:mushroom-entity-card
                entity: sensor.temperature_lily
                primary_info: name
                secondary_info: state
                name: Lily
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.temperature_lily
                hours_to_show: 24
                line_width: 2
                color_thresholds:
                  - value: 0
                    color: '#45b6fe'
                  - value: 20
                    color: '#08f26e'
                  - value: 30
                    color: '#f94449'
                height: 200
                show:
                  name: false
                  icon: false
                  state: false
                  legend: false
                  fill: fade
                card_mod:
                  style: >
                    :host { flex: 0.5 0.5 0% !important; } 

                    ha-card {background: none;box-shadow:
                    none;--ha-card-border-width: 0;padding-top: 0
                    !important;padding-right: 0px !important;-webkit-mask-image:
                    linear-gradient(to left, rgba(0,0,0,1) 75%, rgba(0,0,0,0));}
            layout_options:
              grid_columns: 2
              grid_rows: auto
          - type: custom:stack-in-card
            mode: horizontal
            cards:
              - type: custom:mushroom-entity-card
                entity: sensor.temperature_gabriel
                primary_info: name
                secondary_info: state
                name: Gabriel
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.temperature_gabriel
                hours_to_show: 24
                line_width: 2
                color_thresholds:
                  - value: 0
                    color: '#45b6fe'
                  - value: 20
                    color: '#08f26e'
                  - value: 30
                    color: '#f94449'
                height: 200
                show:
                  name: false
                  icon: false
                  state: false
                  legend: false
                  fill: fade
                card_mod:
                  style: >
                    :host { flex: 0.5 0.5 0% !important; } 

                    ha-card {background: none;box-shadow:
                    none;--ha-card-border-width: 0;padding-top: 0
                    !important;padding-right: 0px !important;-webkit-mask-image:
                    linear-gradient(to left, rgba(0,0,0,1) 75%, rgba(0,0,0,0));}
            layout_options:
              grid_columns: 2
              grid_rows: auto
          - type: custom:stack-in-card
            mode: horizontal
            cards:
              - type: custom:mushroom-entity-card
                entity: sensor.temperature_sdbhaut
                primary_info: name
                secondary_info: state
                name: SdB Haut
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.temperature_sdbhaut
                hours_to_show: 24
                line_width: 2
                color_thresholds:
                  - value: 0
                    color: '#45b6fe'
                  - value: 20
                    color: '#08f26e'
                  - value: 30
                    color: '#f94449'
                height: 200
                show:
                  name: false
                  icon: false
                  state: false
                  legend: false
                  fill: fade
                card_mod:
                  style: >
                    :host { flex: 0.5 0.5 0% !important; } 

                    ha-card {background: none;box-shadow:
                    none;--ha-card-border-width: 0;padding-top: 0
                    !important;padding-right: 0px !important;-webkit-mask-image:
                    linear-gradient(to left, rgba(0,0,0,1) 75%, rgba(0,0,0,0));}
            layout_options:
              grid_columns: 2
              grid_rows: auto
          - type: custom:stack-in-card
            mode: horizontal
            cards:
              - type: custom:mushroom-entity-card
                entity: sensor.temperature_chbas
                primary_info: name
                secondary_info: state
                name: Ch. Bas
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.temperature_chbas
                hours_to_show: 24
                line_width: 2
                color_thresholds:
                  - value: 0
                    color: '#45b6fe'
                  - value: 20
                    color: '#08f26e'
                  - value: 30
                    color: '#f94449'
                height: 200
                show:
                  name: false
                  icon: false
                  state: false
                  legend: false
                  fill: fade
                card_mod:
                  style: >
                    :host { flex: 0.5 0.5 0% !important; } 

                    ha-card {background: none;box-shadow:
                    none;--ha-card-border-width: 0;padding-top: 0
                    !important;padding-right: 0px !important;-webkit-mask-image:
                    linear-gradient(to left, rgba(0,0,0,1) 75%, rgba(0,0,0,0));}
            layout_options:
              grid_columns: 2
              grid_rows: auto
          - type: custom:stack-in-card
            mode: horizontal
            cards:
              - type: custom:mushroom-entity-card
                entity: sensor.temperature_sdbbas
                primary_info: name
                secondary_info: state
                name: SdB Bas
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.temperature_sdbbas
                hours_to_show: 24
                line_width: 2
                color_thresholds:
                  - value: 0
                    color: '#45b6fe'
                  - value: 20
                    color: '#08f26e'
                  - value: 30
                    color: '#f94449'
                height: 200
                show:
                  name: false
                  icon: false
                  state: false
                  legend: false
                  fill: fade
                card_mod:
                  style: >
                    :host { flex: 0.5 0.5 0% !important; } 

                    ha-card {background: none;box-shadow:
                    none;--ha-card-border-width: 0;padding-top: 0
                    !important;padding-right: 0px !important;-webkit-mask-image:
                    linear-gradient(to left, rgba(0,0,0,1) 75%, rgba(0,0,0,0));}
            layout_options:
              grid_columns: 2
              grid_rows: auto
          - type: custom:stack-in-card
            mode: horizontal
            cards:
              - type: custom:mushroom-entity-card
                entity: sensor.temperature_outdoor
                primary_info: name
                secondary_info: state
                name: Exterieur
                card_mod:
                  style: >
                    ha-card { border-radius: 8px;background: none;box-shadow:
                    none;--ha-card-border-width: 0; } :host { flex: 1 1 0%
                    !important; min-width: min-content !important; }
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.temperature_outdoor
                hours_to_show: 24
                line_width: 2
                color_thresholds:
                  - value: 0
                    color: '#45b6fe'
                  - value: 20
                    color: '#08f26e'
                  - value: 30
                    color: '#f94449'
                height: 200
                show:
                  name: false
                  icon: false
                  state: false
                  legend: false
                  fill: fade
                card_mod:
                  style: >
                    :host { flex: 0.5 0.5 0% !important; } 

                    ha-card {background: none;box-shadow:
                    none;--ha-card-border-width: 0;padding-top: 0
                    !important;padding-right: 0px !important;-webkit-mask-image:
                    linear-gradient(to left, rgba(0,0,0,1) 75%, rgba(0,0,0,0));}
            layout_options:
              grid_columns: 2
              grid_rows: auto
          - type: custom:swipe-card
            reset_after: 5
            start_card: 1
            effect: creative
            cards:
              - type: custom:mushroom-template-card
                primary: |-
                  {% if is_state(entity, 'on') %}
                  Zoe - En charge
                  {% elif is_state('binary_sensor.gg085jj_plugged_in', 'on') %}
                  Zoe - Branchée
                  {% else %}
                  Zoe
                  {% endif %}
                icon: >-
                  {% if is_state(entity, 'on') or
                  is_state('binary_sensor.gg085jj_plugged_in', 'on') %}

                  mdi:car-electric

                  {% else %}

                  mdi:car

                  {% endif %}
                entity: binary_sensor.gg085jj_charging
                secondary: >-
                  {{ states('sensor.gg085jj_battery_level') + "% - " +
                  states('sensor.gg085jj_battery_autonomy') + " km"}}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  yellow
                  {% else %}
                  grey
                  {% endif %}
                multiline_secondary: false
                fill_container: false
                layout_options:
                  grid_columns: 2
                  grid_rows: 1
                tap_action:
                  action: none
              - type: custom:mushroom-template-card
                primary: |-
                  {% if is_state(entity, 'on') %}
                  Zoe - En charge
                  {% elif is_state('binary_sensor.gg085jj_plugged_in', 'on') %}
                  Zoe - Branchée
                  {% else %}
                  Zoe
                  {% endif %}
                icon: >-
                  {% if is_state(entity, 'on') or
                  is_state('binary_sensor.gg085jj_plugged_in', 'on') %}

                  mdi:car-electric

                  {% else %}

                  mdi:car

                  {% endif %}
                entity: binary_sensor.gg085jj_charging
                secondary: >-
                  {{ states('sensor.gg085jj_mileage') + " km (" +
                  states('sensor.zoe_burn_rate') + " km)"}}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  yellow
                  {% else %}
                  grey
                  {% endif %}
            multiline_secondary: false
            fill_container: false
            layout_options:
              grid_columns: 2
              grid_rows: 1
            tap_action:
              action: none
          - type: custom:swipe-card
            reset_after: 5
            start_card: 1
            effect: creative
            cards:
              - type: custom:mushroom-template-card
                primary: |-
                  {% if is_state(entity, 'on') %}
                  Megane - En charge
                  {% elif is_state('binary_sensor.gj468rk_plugged_in', 'on') %}
                  Megane - Branchée
                  {% else %}
                  Megane
                  {% endif %}
                icon: >-
                  {% if is_state(entity, 'on') or
                  is_state('binary_sensor.gj468rk_plugged_in', 'on') %}

                  mdi:car-electric

                  {% else %}

                  mdi:car

                  {% endif %}
                entity: binary_sensor.gj468rk_charging
                secondary: >-
                  {{ states('sensor.gj468rk_battery_level') + "% - " +
                  states('sensor.gj468rk_battery_autonomy') + " km"}}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  yellow
                  {% else %}
                  grey
                  {% endif %}
                multiline_secondary: false
                fill_container: false
                layout_options:
                  grid_columns: 2
                  grid_rows: 1
                tap_action:
                  action: none
              - type: custom:mushroom-template-card
                primary: |-
                  {% if is_state(entity, 'on') %}
                  Zoe - En charge
                  {% elif is_state('binary_sensor.gj468rk_plugged_in', 'on') %}
                  Zoe - Branchée
                  {% else %}
                  Zoe
                  {% endif %}
                icon: >-
                  {% if is_state(entity, 'on') or
                  is_state('binary_sensor.gj468rk_plugged_in', 'on') %}

                  mdi:car-electric

                  {% else %}

                  mdi:car

                  {% endif %}
                entity: binary_sensor.gg085jj_charging
                secondary: >-
                  {{ states('sensor.gj468rk_mileage') + " km (" +
                  states('sensor.megane_burn_rate') + " km)"}}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  yellow
                  {% else %}
                  grey
                  {% endif %}
            multiline_secondary: false
            fill_container: false
            layout_options:
              grid_columns: 2
              grid_rows: 1
            tap_action:
              action: none
    badges:
      - type: custom:mushroom-template-badge
        content: >-
          {% if is_state('person.hugo', 'home') %}

          {% if state_attr('person.hugo', 'source') == 'device_tracker.hugo_mob'
          %}

          Home

          {% else %}

          Ext

          {% endif %}

          {% else %}

          Away

          {% endif %}
        icon: ''
        color: red
        entity: person.hugo
        picture: |-
          {% if is_state('person.hugo', 'home') %}
            {{ state_attr("person.hugo", "entity_picture" ) }}
          {% else %}
            {{ state_attr("person.hugo_off", "entity_picture" ) }}
          {% endif %}
      - type: custom:mushroom-template-badge
        content: >-
          {% if is_state('person.andrea', 'home') %}

          {% if state_attr('person.andrea', 'source') ==
          'device_tracker.andrea_mob' %}

          Home

          {% else %}

          Ext

          {% endif %}

          {% else %}

          Away

          {% endif %}
        icon: mdi:mushroom
        color: red
        entity: person.andrea
        picture: |-
          {% if is_state('person.andrea', 'home') %}
            {{ state_attr("person.andrea", "entity_picture" ) }}
          {% else %}
            {{ state_attr("person.andrea_off", "entity_picture" ) }}
          {% endif %}
      - type: custom:mushroom-template-badge
        content: >-
          {% if is_state('person.lily_rose', 'home') %}

          {% if state_attr('person.lily_rose', 'source') ==
          'device_tracker.lily_mob' %}

          Home

          {% else %}

          Ext

          {% endif %}

          {% else %}

          Away

          {% endif %}
        icon: ''
        color: red
        entity: person.lily_rose
        picture: |-
          {% if is_state('person.lily_rose', 'home') %}
            {{ state_attr("person.lily_rose", "entity_picture" ) }}
          {% else %}
            {{ state_attr("person.lily_off", "entity_picture" ) }}
          {% endif %}
      - type: custom:mushroom-template-badge
        content: >-
          {% if is_state('person.gabriel', 'home') %}

          {% if state_attr('person.gabriel', 'source') ==
          'device_tracker.gabriel_mob' %}

          Home

          {% else %}

          Ext

          {% endif %}

          {% else %}

          Away

          {% endif %}
        icon: mdi:mushroom
        color: red
        entity: person.gabriel
        picture: |-
          {% if is_state('person.gabriel', 'home') %}
            {{ state_attr("person.gabriel", "entity_picture" ) }}
          {% else %}
            {{ state_attr("person.gabriel_off", "entity_picture" ) }}
          {% endif %}
      - type: custom:mushroom-template-badge
        content: >-
          {{ states(entity) + " > " +
          states('sensor.rte_tempo_prochaine_couleur')}}
        icon: mdi:lightning-bolt
        color: |-
          {% if is_state(entity, 'Bleu') %}
          blue
          {% else %}
          {% if is_state(entity, 'Blanc') %}
          white
          {% else %}
          {% if is_state(entity, 'Rouge') %}
          red
          {% endif %}
          {% endif %}
          {% endif %}
        entity: sensor.rte_tempo_couleur_actuelle
        label: Tempo
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state(entity, 'on') %}
          {{ state_attr(entity, "message" ) }}
          {% else %}
          Aucune
          {% endif %}
        icon: mdi:trash-can
        color: |-
          {% if is_state(entity, 'on') %}
          {% if state_attr(entity, "message" ) == 'Jaune' %}
          yellow
          {% else %}
          {% if state_attr(entity, "message" ) == 'Verte' %}
          green
          {% else %}
          {% if state_attr(entity, "message" ) == 'Végétaux' %}
          #808000
          {% endif %}
          {% endif %}
          {% endif %}
          {% else %}
          grey
          {% endif %}
        entity: calendar.poubelles
        label: Poubelle
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state(entity, 'on') %}
          On
          {% else %}
          Off
          {% endif %}
        icon: |-
          {% if is_state(entity, 'on') %}
          mdi:tumble-dryer
          {% else %}
          mdi:tumble-dryer-off
          {% endif %}
        color: |-
          {% if is_state(entity, 'on') %}
          orange
          {% else %}
          grey
          {% endif %}
        entity: binary_sensor.seche_linge_en_marche
        label: Sèche-Linge
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        content: |-
          {% if is_state(entity, 'on') %}
          Ouverte
          {% else %}
          Fermée
          {% endif %}
        icon: |-
          {% if is_state(entity, 'on') %}
          mdi:door-open
          {% else %}
          mdi:door-closed
          {% endif %}
        color: |-
          {% if is_state(entity, 'on') %}
          yellow
          {% else %}
          grey
          {% endif %}
        entity: binary_sensor.door_window_sensor_158d00024e4b12
        label: Porte
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        content: >-
          {% if is_state('binary_sensor.network_pings', 'off') or
          is_state('binary_sensor.battery_low', 'on') or
          is_state('binary_sensor.livebox_fibre_wan_status', 'off') or
          is_state('binary_sensor.gandi_up_to_date', 'off') or
          (states('sensor.s_cert_exiry_d') | int < 20) %}

          KO

          {% else %}

          OK

          {% endif %}
        icon: >-
          {% if is_state('binary_sensor.network_pings', 'off') or
          is_state('binary_sensor.battery_low', 'on') or
          is_state('binary_sensor.livebox_fibre_wan_status', 'off') or
          is_state('binary_sensor.gandi_up_to_date', 'off') or
          (states('sensor.s_cert_exiry_d') | int < 20) %}

          mdi:close-network-outline

          {% else %}

          mdi:check-network-outline

          {% endif %}
        color: >-
          {% if is_state('binary_sensor.network_pings', 'off') or
          is_state('binary_sensor.battery_low', 'on') or
          is_state('binary_sensor.livebox_fibre_wan_status', 'off') or
          is_state('binary_sensor.gandi_up_to_date', 'off') or
          (states('sensor.s_cert_exiry_d') | int < 20) %}

          red

          {% else %}

          green

          {% endif %}
        entity: binary_sensor.network_pings
        label: Monitoring
        tap_action:
          action: navigate
          navigation_path: /dashboard-mush/monitoring
      - type: custom:mushroom-template-badge
        content: >-
          {{ states(entity) + " " + state_attr("sensor.speedtest_cli_download",
          "unit_of_measurement" ) }}
        icon: |-
          {% if (states(entity)|float) > 9 %}
          mdi:speedometer
          {% else %}
          {% if (states(entity)|float) > 5 %}
          mdi:speedometer-medium
          {% else %}
          mdi:speedometer-slow
          {% endif %}
          {% endif %}
        color: |-
          {% if (states(entity)|float) > 9 %}
          green
          {% else %}
          {% if (states(entity)|float) > 5 %}
          orange
          {% else %}
          red
          {% endif %}
          {% endif %}
        entity: sensor.speedtest_cli_download
        label: Débit
        tap_action:
          action: more-info
      - type: custom:mushroom-template-badge
        content: '{{ states.update | selectattr(''state'',''eq'',''on'') | list | count }}'
        icon: mdi:arrow-up-bold-circle-outline
        color: |-
          {% if is_state(entity, 'on') %}
          blue
          {% else %}
          grey
          {% endif %}
        entity: binary_sensor.any_update
        label: Updates
        tap_action:
          action: navigate
          navigation_path: /dashboard-mush/updates
  - title: Monitoring
    path: monitoring
    type: sections
    max_columns: 3
    subview: false
    sections:
      - type: grid
        cards:
          - type: tile
            entity: binary_sensor.livebox_fibre_wan_status
          - type: tile
            entity: sensor.gandi_synchro
          - type: custom:mushroom-title-card
            title: ''
            subtitle: Ping
          - type: custom:mushroom-chips-card
            chips:
              - type: template
                entity: binary_sensor.ap_buanderie
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.ap_exterieur
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.ap_garage
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.ap_lily
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.ap_salon
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.camera_nord
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.camera_sud
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.chromecast
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.gateway_xiaomi
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.google_home
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.imprimante
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.livebox_tv
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.rpi_4
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_cheminee
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_drip
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_electrolyseur
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_guirlande
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_jardin_nord
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_jardin_sud
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_pilier
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_pompe
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_portail
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_salon
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_spot
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_sprinkler
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_tv_set
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.shelly_vanne
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.sonos
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.tablette_murale
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.thermostat
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.yeelight_gabriel
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
              - type: template
                entity: binary_sensor.yeelight_plafonnier
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                  green
                  {% else %}
                  red
                  {% endif %}
                icon: |-
                  {% if is_state(entity, 'on') %}
                  mdi:check-network-outline
                  {% else %}
                  mdi:close-network-outline
                  {% endif %}
                content: '{{ state_attr(entity, "friendly_name" ) }}'
        title: Internet
      - type: grid
        cards:
          - type: custom:bar-card
            direction: right
            unit_of_measurement: '%'
            max: 100
            height: 10px
            width: 100%
            icon: 'off'
            severity:
              - color: rgba(240,49,39,0.6)
                from: 0
                to: 30
              - color: rgba(255, 218, 120 ,0.4)
                from: 30.1
                to: 50
              - color: rgba(70, 130, 180, 0.6)
                from: 50.1
                to: 99.9
              - color: rgba(39, 179, 118,0.6)
                from: 100
                to: 100
            entities:
              - entity: sensor.battery_sdbbas
                name: Bains Bas
                icon: mdi:battery
              - entity: sensor.battery_sdbhaut
                name: Bains Haut
                icon: mdi:battery
              - entity: sensor.battery_chbas
                name: Ch. Bas
                icon: mdi:battery
              - entity: sensor.battery_gabriel
                name: Ch. Gabriel
                icon: mdi:battery
              - entity: sensor.battery_lily
                name: Ch. Lily
                icon: mdi:battery
              - entity: sensor.battery_outdoor
                name: Extérieur
                icon: mdi:battery
              - entity: sensor.battery_door
                name: Porte
                icon: mdi:battery
              - entity: sensor.battery_presencebas
                name: Prés. Bas
                icon: mdi:battery
              - entity: sensor.battery_presencehaut
                name: Prés. Haut
                icon: mdi:battery
              - entity: sensor.battery_salon
                name: Salon
                icon: mdi:battery
              - entity: sensor.thermostat_battery_percent_2
                name: Thermostat
                icon: mdi:battery
              - entity: sensor.myups_battery_charge
                name: UPS
                icon: mdi:battery
            layout_options:
              grid_columns: 2
              grid_rows: auto
          - type: custom:bar-card
            direction: right
            unit_of_measurement: °C
            max: 80
            height: 10px
            width: 100%
            decimal: 0
            icon: 'off'
            severity:
              - color: rgba(70, 130, 180, 0.6)
                from: 0
                to: 50
              - color: rgba(255, 218, 120 ,0.4)
                from: 50
                to: 60
              - color: rgba(240,49,39,0.6)
                from: 60
                to: 80
            entities:
              - entity: sensor.cheminee_device_temperature
                name: Cheminee
                icon: mdi:thermometer
              - entity: sensor.electrolyseur_device_temperature
                name: Electrolyseur
                icon: mdi:thermometer
              - entity: sensor.guirlande_device_temperature
                name: Guirlande
                icon: mdi:thermometer
              - entity: sensor.jardin_nord_device_temperature
                name: Jardin Nord
                icon: mdi:thermometer
              - entity: sensor.jardin_est_device_temperature
                name: Jardin Est
                icon: mdi:thermometer
              - entity: sensor.pilier_device_temperature
                name: Pilier
                icon: mdi:thermometer
              - entity: sensor.pompe_switch_0_device_temperature
                name: Pompe
                icon: mdi:thermometer
              - entity: sensor.processor_temperature
                name: RPI 4
                icon: mdi:thermometer
              - entity: sensor.salon_device_temperature
                name: Salon
                icon: mdi:thermometer
              - entity: sensor.spot_temp_device_temperature
                name: Spot
                icon: mdi:thermometer
              - entity: sensor.tv_set_device_temperature
                name: TV Set
                icon: mdi:thermometer
            layout_options:
              grid_columns: 2
              grid_rows: auto
        title: Batteries & Températures
      - type: grid
        cards:
          - type: tile
            entity: sensor.uptime
          - type: custom:mushroom-template-card
            primary: Expiration Certificat
            icon: mdi:shield-lock
            entity: sensor.s_cert_exiry_d
            secondary: '{{ states(entity) + '' days''}}'
            icon_color: |-
              {% if states(entity) | int < 20 %}
              red
              {% else %}
              #b4befe
              {% endif %}
            multiline_secondary: false
            fill_container: false
            layout_options:
              grid_columns: 2
              grid_rows: 1
          - type: tile
            entity: sensor.onedrivebackup
            name: Last backup
            state_content: Last OneDrive backup date
            icon: mdi:cloud-upload
          - type: tile
            entity: sensor.processor_temperature
            name: Temp. Processeur
          - type: custom:bar-card
            width: 55%
            height: 10px
            decimal: 0
            unit_of_measurement: '%'
            positions:
              icon: outside
              indicator: 'off'
              name: outside
            severity:
              - color: '#39b329'
                from: 0
                to: 50
              - color: '#e9e913'
                from: 51
                to: 75
              - color: '#ff7a00'
                from: 76
                to: 89
              - color: '#6d2525'
                from: 90
                to: 200
            entities:
              - entity: sensor.processor_use
                name: Processor use
                tap_action:
                  action: call-service
                  service: homeassistant.update_entity
                  service_data:
                    entity_id: sensor.processor_use
              - entity: sensor.memory_use_percent
                name: Memory use
                icon: mdi:memory
                tap_action:
                  action: call-service
                  service: homeassistant.update_entity
                  service_data:
                    entity_id: sensor.memory_use_percent
              - entity: sensor.disk_use_percent
                name: Core Disk use
                icon: mdi:harddisk
                tap_action:
                  action: call-service
                  service: homeassistant.update_entity
                  service_data:
                    entity_id: sensor.disk_use_percent
              - entity: sensor.disk_use_percent_media_ext
                name: SSD Disk use
                icon: mdi:harddisk
                tap_action:
                  action: call-service
                  service: homeassistant.update_entity
                  service_data:
                    entity_id: sensor.disk_use_percent_media_ext
          - type: custom:mushroom-title-card
            title: Imprimante
          - type: custom:bar-card
            width: 55%
            height: 10px
            decimal: 0
            unit_of_measurement: '%'
            positions:
              icon: outside
              indicator: 'off'
              name: outside
            entities:
              - entity: sensor.niveau_encre_noire_preserved
                name: Black
                color: black
                icon: mdi:water-percent
              - entity: sensor.niveau_encre_couleur_preserved
                name: Couleur
                color: magenta
                icon: mdi:water-percent
        title: RPI
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        content: Home
        icon: mdi:home
        color: blue
        tap_action:
          action: navigate
          navigation_path: /dashboard-mush/0
  - title: Updates
    path: updates
    type: sections
    max_columns: 3
    sections:
      - type: grid
        cards:
          - type: custom:auto-entities
            card:
              type: entities
            filter:
              include:
                - entity_id: update.*
                  state: 'on'
              exclude: []
    badges:
      - type: custom:mushroom-template-badge
        content: Home
        icon: mdi:home
        color: blue
        tap_action:
          action: navigate
          navigation_path: /dashboard-mush/0
  - title: pool
    path: pool
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        content: Home
        icon: mdi:home
        color: blue
        tap_action:
          action: navigate
          navigation_path: /dashboard-mush/0
    type: sections
    sections:
      - type: grid
        cards:
          - type: tile
            entity: input_boolean.cycle1_piscine
          - type: tile
            entity: input_boolean.cycle2_piscine
          - type: custom:mushroom-select-card
            entity: input_select.cycle1_piscine_start
          - type: custom:mushroom-select-card
            entity: input_select.cycle2_piscine_start
          - type: custom:mushroom-select-card
            entity: input_select.cycle1_piscine_end
          - type: custom:mushroom-select-card
            entity: input_select.cycle2_piscine_end
          - type: custom:mushroom-number-card
            entity: input_number.temps_remplissage_piscine
            name: Temps remplissage
            layout_options:
              grid_columns: 4
              grid_rows: 2
      - type: grid
        cards:
          - type: custom:mini-graph-card
            entities:
              - color: '#385581'
                entity: sensor.temp_piscine_preserved
                name: Température Eau
            align_state: left
            line_width: 4
            height: 200
            group: false
            points_per_hour: 2
            hour24: true
            hours_to_show: 24
            show:
              fill: fade
              icon: true
              name: true
              state: true
              name_adaptive_color: true
              labels: true
              legend: false
              average: true
              extrema: true
              points: false
            tap_action:
              action: none
    max_columns: 3
  - title: arrosage
    path: arrosage
    type: sections
    max_columns: 3
    sections:
      - type: grid
        cards:
          - type: custom:mushroom-select-card
            entity: input_select.arrosage_mode
            layout_options:
              grid_columns: 2
              grid_rows: 2
            icon: mdi:refresh-auto
          - type: custom:mushroom-select-card
            entity: input_select.arrosage_type
            icon: mdi:ab-testing
          - type: tile
            entity: sensor.test_pluie
            layout_options:
              grid_columns: 4
              grid_rows: 1
            name: Pluie dernières 24h
            icon: mdi:weather-pouring
          - type: tile
            entity: binary_sensor.arrosage_hier
          - type: tile
            entity: binary_sensor.arrosage_ce_soir
    badges:
      - type: custom:mushroom-template-badge
        content: Home
        icon: mdi:home
        color: blue
        tap_action:
          action: navigate
          navigation_path: /dashboard-mush/0
  - title: test
    path: test
    type: sections
    max_columns: 3
    sections:
      - type: grid
        cards:
          - show_state: false
            show_name: false
            camera_view: live
            type: picture-entity
            image: https://demo.home-assistant.io/stub_config/bedroom.png
            camera_image: camera.cam_sud
            entity: camera.cam_sud
            layout_options:
              grid_columns: 4
              grid_rows: 4
      - type: grid
        cards:
          - show_state: false
            show_name: false
            camera_view: live
            type: picture-entity
            image: https://demo.home-assistant.io/stub_config/bedroom.png
            camera_image: camera.cam_nord
            entity: camera.cam_nord
            layout_options:
              grid_columns: 4
              grid_rows: 4
