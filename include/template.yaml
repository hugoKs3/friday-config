template:

  #################################################
  #                                               #
  #                    SELECT                     #
  #                                               #
  #################################################

  - select:
      - name: conditional_media
        state: >
          {% set recently_added = 'Recently Downloaded' %}
          {% set paused_timeout_minutes = 15 %}
          {% set media_players = [
            states.media_player.livebox,
            states.media_player.salon,
            states.media_player.salon_speaker,
            states.media_player.salon_tv ] %}

          {% macro media(state) %}
          {% set state = media_players | selectattr('state','eq',state) | list %}
          {% set last_changed = recently_added if state | length == 0 else state | map(attribute='last_changed') | list | max %}
            {{ state | selectattr('last_changed','eq', last_changed) | map(attribute='name') | list | join }}
          {% endmacro %}

          {% set playing = media_players | selectattr('state','eq','playing') | list %}
          {% set timeout_playing = False if playing | length == 0 else
            (as_timestamp(now()) - as_timestamp(playing | map(attribute='last_changed') | list | max)) < paused_timeout_minutes * 60 %}

          {% set paused = media_players | selectattr('state','eq','paused') | list %}
          {% set timeout_paused = False if paused | length == 0 else
            (as_timestamp(now()) - as_timestamp(paused | map(attribute='last_changed') | list | max)) < paused_timeout_minutes * 60 %}

          {% if playing %}
            {{ media('playing') if timeout_playing else media('paused') if timeout_paused else media('playing') }}
          {% elif paused %}
            {{ media('paused') if timeout_paused else recently_added }}
          {% else %}
            {{ recently_added }}
          {% endif %}
        options: >
          {% set recently_added = ['Recently Downloaded'] %}
          {% set media_players = [
            states.media_player.livebox,
            states.media_player.salon,
            states.media_player.salon_speaker,
            states.media_player.salon_tv ] %}
          {{ recently_added + media_players | map(attribute='name') | list }}
        select_option:
          service: select.select_option
          target:
            entity_id: select.conditional_media
          data:
            option: >
              {{ option }}

  #################################################
  #                                               #
  #                    SENSOR                     #
  #                                               #
  #################################################

  - sensor:
      - unique_id: sidebar
        state: template
        attributes:
          time: >
            {% set hours = now().strftime('%H') %}
            {% set minutes = now().strftime('%M') %}
            <span class="time">
              {{ hours }}<span class="time-colon">:</span>{{ minutes }}
            </span>
          date: |
            <font color='#6a7377'>
            {%- if strptime(states('sensor.date'), '%Y-%m-%d').day != null %}
            {%- set days = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'] %}
            {%- set months = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',
            'Julliet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'] %}
              {{- days[now().weekday()] }}<br>
              {{- strptime(states('sensor.date'), '%Y-%m-%d').day }} {{ months[now().month-1] }}
            {%- endif -%}
            </font>
          # greet: |
          #   <b>
          #   {%- set time = now().hour %}
          #   {%- if time <= 1 -%} Bonne nuit 
          #   {%- elif time <= 3 -%} Bonne nuit
          #   {%- elif time <= 5 -%} Bonne nuit
          #   {%- elif time <= 7 -%} Bonjour
          #   {%- elif time <= 9 -%} Bonjour
          #   {%- elif time <= 10 -%} Bonjour
          #   {%- elif time <= 13 -%} Bonne journée
          #   {%- elif time <= 15 -%} Bonne journée
          #   {%- elif time <= 17 -%} Bonne journée
          #   {%- elif time <= 19 -%} Bonne soirée
          #   {%- elif time <= 22 -%} Bonne soirée
          #   {%- elif time <= 23 -%} Bonne soirée
          #   {%- else %} Bonne soirée
          #   {%- endif -%}
          #   <br/>
          #   <br/>
          #   </b>

          # weather: |
          #   {% set temperature = state_attr('weather.biot', 'temperature') %}
          #   {% set precip = states('sensor.biot_rain_chance') | round %}
          #   {% set snow = states('sensor.biot_snow_chance') | round %}
          #   {% set weather_state = states('weather.biot')
          #     | replace('rainy', 'Pluvieux')
          #     | replace('partlycloudy', 'Partiellement nuageux')
          #     | replace('cloudy', 'Nuageux')
          #     | replace('clear-night', 'Nuit claire')
          #     | replace('fog', 'Brumeux')
          #     | replace('hail', 'Grêleux')
          #     | replace('lightning-rainy', 'Orageux')
          #     | replace('lightning', 'Orageux')
          #     | replace('pourring', 'Pluie intense')
          #     | replace('snowy-rainy', 'Neigeux')
          #     | replace('snowy', 'Neigeux')
          #     | replace('sunny', 'Ensoleillé')
          #     | replace('windy-variant', 'Variablement venteux')
          #     | replace('windy', 'Venteux')
          #     | replace('exceptional', 'Exceptionel') %}
          #   {% if not state_attr('weather.biot', 'temperature') == 'unknow' %}
          #     {% if temperature | float <= 0.0 %}
          #       {{ weather_state }}, il fait {{ temperature }}° avec {{ snow }}% de risque de neige.
          #     {% elif temperature | float > 0.0 %}
          #       {{ weather_state }}, il fait {{ temperature }}° avec {{ precip }}% de risque de pluie.
          #     {% endif %}
          #   {% else %}
          #     Pas d'information métérologique...
          #   {% endif %}
          # friday: |
          #   <center><img src="/local/friday2.png" width="80%"/></center>
            

      - unique_id: weather_temperature
        unit_of_measurement: '°C'
        state: >
          {{ state_attr('weather.biot', 'temperature') }}

      - unique_id: weather_humidity
        unit_of_measurement: '%'
        state: >
          {{ state_attr('weather.biot', 'humidity') }}

      - name: "Thermostat Current Temp"
        unit_of_measurement: "°C"
        state: "{{ state_attr('climate.general_2', 'current_temperature') }}"

      - name: "Jours ROUGE restants"
        state: "{{ states.sensor.rte_tempo_cycle_jours_restants_rouge.state }}j / {{ (states.sensor.rte_tempo_cycle_jours_restants_rouge.state | int) + (states.sensor.rte_tempo_cycle_jours_deja_places_rouge.state | int) }}j"
        icon: mdi:circle

      - name: "Jours BLEU restants"
        state: "{{ states.sensor.rte_tempo_cycle_jours_restants_bleu.state }}j / {{ (states.sensor.rte_tempo_cycle_jours_restants_bleu.state | int) + (states.sensor.rte_tempo_cycle_jours_deja_places_bleu.state | int) }}j"
        icon: mdi:circle

      - name: "Jours BLANC restants"
        state: "{{ states.sensor.rte_tempo_cycle_jours_restants_blanc.state }}j / {{ (states.sensor.rte_tempo_cycle_jours_restants_blanc.state | int) + (states.sensor.rte_tempo_cycle_jours_deja_places_blanc.state | int) }}j"
        icon: mdi:circle

      - name: 'SpeedTest CLI Ping'
        unique_id: speedtest_cli_ping
        icon: mdi:speedometer
        unit_of_measurement: ms
        state_class: measurement
        state: "{{ (states('sensor.speedtest_cli_data') | from_json).ping | round(2) }}"
      - name: 'SpeedTest CLI Download'
        unique_id: speedtest_cli_download
        icon: mdi:speedometer
        unit_of_measurement: Mbit/s
        state_class: measurement
        state: "{{ ((states('sensor.speedtest_cli_data') | from_json).download * 8 / 1000 / 1000) | round(2) }}"
      - name: 'SpeedTest CLI Upload'
        unique_id: speedtest_cli_upload
        icon: mdi:speedometer
        unit_of_measurement: Mbit/s
        state_class: measurement
        state: "{{ ((states('sensor.speedtest_cli_data') | from_json).upload * 8 / 1000 / 1000) | round(2) }}"

      - name: "Zoe Burn Rate"
        unit_of_measurement: "km"
        state: "{{ ((states.sensor.gg085jj_mileage.state | int) - ((37500/1127) * (strptime((states('sensor.date')), '%Y-%m-%d') - strptime('2022-05-23', '%Y-%m-%d')).days))|round }}"
      
      - name: "Megane Burn Rate"
        unit_of_measurement: "km"
        state: "{{ ((states.sensor.gj468rk_mileage.state | int) - ((37500/1127) * (strptime((states('sensor.date')), '%Y-%m-%d') - strptime('2022-10-06', '%Y-%m-%d')).days))|round }}"

      - name: "Gandi Synchro"
        state: >-
          {% if is_state('binary_sensor.gandi_up_to_date', 'on') %}
            {{"OK"}}
          {% else %}
            {{"KO"}}
          {% endif %}
        icon: mdi:wan

      - name: Keypad Input Masked
        unique_id: keypad_input_masked
        state: >
          {% set input_length = states('input_text.keypad_input')|length %}
          {{ '*' * input_length }}

  #################################################
  #                                               #
  #                    BINARY                     #
  #                    SENSOR                     #
  #################################################

  - binary_sensor:
      - name: "Any Update"
        state: "
          {{ states.update | selectattr('state','eq','on') | list | count > 0 }}"

      - name: "Shelly Update"
        state: "
          {{
            is_state('update.cheminee_firmware_update', 'on')
            or
            is_state('update.electrolyseur_firmware_update', 'on')
            or
            is_state('update.jardin_est_firmware_update', 'on')
            or
            is_state('update.goutte_firmware_update', 'on')
            or
            is_state('update.guirlande_firmware_update', 'on')
            or
            is_state('update.jardin_nord_firmware_update', 'on')
            or
            is_state('update.pilier_firmware_update', 'on')
            or
            is_state('update.plafonnier_firmware_update', 'on')
            or
            is_state('update.pompe_firmware_update', 'on')
            or
            is_state('update.portail_firmware_update', 'on')
            or
            is_state('update.salon_firmware_update', 'on')
            or
            is_state('update.spot_temp_firmware_update', 'on')
            or
            is_state('update.sprinkler_firmware_update', 'on')
            or
            is_state('update.tv_set_firmware_update', 'on')
            or
            is_state('update.vanne_firmware_update', 'on')
          }}"

      - name: "Cycle Piscne"
        state: "
          {{
            (is_state('input_boolean.cycle1_piscine', 'on') and (states.sensor.time.state > states.input_select.cycle1_piscine_start.state) and (states.sensor.time.state < states.input_select.cycle1_piscine_end.state))
            or
            (is_state('input_boolean.cycle2_piscine', 'on') and (states.sensor.time.state > states.input_select.cycle2_piscine_start.state) and (states.sensor.time.state < states.input_select.cycle2_piscine_end.state))
          }}"

      - name: "Arrosage ce soir"
        icon: mdi:chevron-right-box-outline
        state: "
          {{
            (is_state('input_select.arrosage_mode', 'Auto-Full') or (is_state('input_select.arrosage_mode', 'Auto-Demi') and is_state('binary_sensor.arrosage_hier', 'off')))
            and
            (states('sensor.test_pluie') | float) < 1
          }}"

      - name: "Arrosage Hier"
        icon: mdi:chevron-left-box-outline
        state: "
          {{
            is_state('input_boolean.arrosage_hier', 'on')
          }}"

      - name: "Seche-Linge en Marche"
        state: "
          {{
            (states('sensor.seche_linge_power') | int) > 2
          }}"

      - name: "Cartouche Imprimante Low"
        state: "
          {{
            (states('sensor.niveau_encre_couleur_preserved') | int) <= 5
            or
            (states('sensor.niveau_encre_noire_preserved') | int) <= 5
          }}"

      - name: "Battery Low"
        state: "
          {{
            (states('sensor.battery_chbas') | int) <= 3
            or
            (states('sensor.battery_door') | int) <= 3
            or 
            (states('sensor.battery_gabriel') | int) <= 3
            or
            (states('sensor.battery_lily') | int) <= 3
            or
            (states('sensor.battery_outdoor') | int) <= 3
            or
            (states('sensor.battery_presencebas') | int) <= 3
            or
            (states('sensor.battery_presencehaut') | int) <= 3
            or
            (states('sensor.battery_salon') | int) <= 3
            or
            (states('sensor.battery_sdbbas') | int) <= 3
          }}"

      - name: "Gandi Up-to-date"
        state: "
          {{
            state_attr('binary_sensor.livebox_fibre_wan_status', 'wan_ipaddress') == states('sensor.gandi_ip')
          }}"

      - name: "Somebody Home"
        state: "
          {{
            is_state('person.hugo', 'home')
            or
            is_state('person.andrea', 'home')
            or
            is_state('person.lily_rose', 'home')
            or
            is_state('person.gabriel', 'home')
          }}"